- part 1:
make it so that when you press numbers they are added to num1, but when you press an operator they are added to num2

- make the calculator containers in  css and html, one for the previous result, and one for the current calculation.
numbers 0 - 9
=
C CE
ANS

- give each of the containers in html an ID and a class

- place these on the left side of the calculator

- do the same for * - + /
place them on the right side

- make a display with two nested displays, entryDisplay and ansDisplay

- divide the JS file into the following categories:
	- variable declarations
		* node declarations		
			- numbers
			- operators
			- others
		* other global variables
	- functions
		* utility functions
		* controller functions
	- DOM generation
		- node creation
		- listeners
---------------------------------------------------

- connect to listeners and variables:
buttons
display

- make object variables called num1, num2, operator, and, currentNum.

make it so that when you press numbers, that they keep concatenating to num1, which is continually displayed
	- get a log that displays the ID of the button that was pressed
		- make a function that triggers when any button is pressed
		- make a function called getBtnId and put it in that function
		
	make a log that gives the value of each number


- make a function called switchCurrentNum, which switches between currentNum = num1 and
currentNum = num2


make it so that you can use currentNum instead of num1
			

- make a function called operator, which, for now, invokes switchCurrentNum when an operator is pressed		

- add 

- make a variable called testDisplay, which is num1 + operator + num2
- make a function called updateDisplay, which is
num1 + operator + num2

make a function called addSpaces, which checks if operator and num2 are empty. If not, it adds an extra space.


- remove all the operator containers

- make an object called "operators" with the following properties:
	id:
	textcontent:

make a loop that creates and appends the operators to the right side of the calculator, and gives them all the class "operator" and gives them IDs and textcontent based on the previous object, and gives them listeners that refer to function${id}
