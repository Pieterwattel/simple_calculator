- part 1:
make it so that when you press numbers they are added to num1, but when you press an operator they are added to num2

- make the calculator containers in  css and html, one for the previous result, and one for the current calculation.
numbers 0 - 9
=
C CE
ANS

- give each of the containers in html an ID and a class

- place these on the left side of the calculator

- do the same for * - + /
place them on the right side

- make a display with two nested displays, entryDisplay and ansDisplay

- divide the JS file into the following categories:
	- variable declarations
		* node declarations		
			- numbers
			- operators
			- others
		* other global variables
	- functions
		* utility functions
		* controller functions
	- DOM generation
		- node creation
		- listeners
---------------------------------------------------

- connect to listeners and variables:
buttons
display

- make object variables called num1, num2, operator, and, currentNum.

make it so that when you press numbers, that they keep concatenating to num1, which is continually displayed
	- get a log that displays the ID of the button that was pressed
		- make a function that triggers when any button is pressed
		- make a function called getBtnId and put it in that function
		
	make a log that gives the value of each number


- make a function called switchCurrentNum, which switches between currentNum = num1 and
currentNum = num2


make it so that you can use currentNum instead of num1
			

make an object with the operators

make the operators appear on the DOM

make the ID of the pressed operator appear

- make a function called operator, which, for now, invokes switchCurrentNum when an operator is pressed

add the different operators

make a function called addSpaces, which checks if operator and num2 are empty. If not, it adds an extra space.

- part 2:
make a calculator that works with 2 variables and an operator, which log in the console.
make the calculator able to do 2 + 2 = 4

make a function calculate (), which runs when the operator = is pressed

- let the function "calculate" take the operator, num1 and num2 as a parameters, and calls the corresponding operator function. see if you can just log the function name by calling it with different parameters

- make functions for:
add
subtract
multiply
divide

make ans into an array.

put the calculation into the displayTop
put the ANS in the displayBottom

at the end of every calculate function, change the first ans to the result

- add the ANS variable to displayResult

- write a function called clearEntry
	*changes num1, num2 and operator into ""

- connect clearEntry at the end of calculate, so the values will be empty again.

make a clearAll function,
let num1, num2, operator & ans = ""
